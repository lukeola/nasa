name: Deploy to AWS ECS

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to Amazon ECR
      env:
        AWS_REGION: us-east-1
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin 337909777953.dkr.ecr.us-east-1.amazonaws.com

    - name: Build Docker image
      run: docker build -t nasacrown .

    - name: Tag Docker image
      run: docker tag nasacrown:latest 337909777953.dkr.ecr.us-east-1.amazonaws.com/nasacrown:latest

    - name: Push Docker image to Amazon ECR
      run: docker push 337909777953.dkr.ecr.us-east-1.amazonaws.com/nasacrown:latest

    - name: Deploy to Amazon ECS
      env:
        AWS_REGION: us-east-1
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition website | jq '.taskDefinition')
        NEW_TASK_DEFINITION=$(echo $TASK_DEFINITION | jq 'del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .registeredAt, .registeredBy)')
        NEW_TASK_DEFINITION=$(echo $NEW_TASK_DEFINITION | jq ' .containerDefinitions[0].environment |= . + [{"name": "MY_ENV_VARIABLE", "value": "new-value"}]')
        echo $NEW_TASK_DEFINITION > new-task-def.json
        aws ecs register-task-definition --cli-input-json file://new-task-def.json
        aws ecs update-service --cluster cbit --service nasacrown --force-new-deployment

